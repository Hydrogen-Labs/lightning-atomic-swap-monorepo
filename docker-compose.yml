version: '3.8'

services:
  webapp:
    build:
      context: .
      dockerfile: packages/nextjs/Dockerfile
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - ./packages/nextjs/.env
    depends_on:
      - server

  server:
    build:
      context: .
      dockerfile: packages/server/Dockerfile
    restart: always
    ports:
      - '3003:3003'
      - '3002:3002'
    env_file:
      - ./packages/server/.env
    volumes:
      - server_logs:/app/packages/server/logs
    depends_on:
      - prisma

  relay:
    build:
      context: .
      dockerfile: packages/relay-server/Dockerfile
    restart: always
    ports:
      - '3004:3004'
    env_file:
      - ./packages/relay-server/.env
    volumes:
      - relay_logs:/app/relay-server/logs


  envio-postgres:
    extends:
      file: ./packages/indexer/generated/docker-compose.yaml
      service: envio-postgres
    networks:
      - default
      - my-proxy-net

  graphql-engine:
    extends:
      file: ./packages/indexer/generated/docker-compose.yaml
      service: graphql-engine
    networks:
      - default
      - my-proxy-net

  prisma:
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=testdapp

volumes:
  postgres_data:
  server_logs:
  relay_logs:
  db_data:
  ganache-data:

networks:
  my-proxy-net:
    name: local_test_network
